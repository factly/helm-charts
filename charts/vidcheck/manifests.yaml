---
# Source: vidcheck/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vidcheck-server
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
---
# Source: vidcheck/templates/studio/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vidcheck-studio
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: vidcheck-studio
    app.kubernetes.io/version: "0.1.0"
---
# Source: vidcheck/templates/studio/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vidcheck-studio-config
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: vidcheck-studio
    app.kubernetes.io/version: "0.1.0"
data:
  config.js: |-
    window.PUBLIC_URL = "https://vidcheck.factly.org";
    window.REACT_APP_API_URL = "https://vidcheck-server.factly.org";
    window.CHOKIDAR_USEPOLLING = "true";
---
# Source: vidcheck/templates/server/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: vidcheck-server-metrics
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/name: vidcheck-server
  type: ClusterIP
  ports:  
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: metrics
---
# Source: vidcheck/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vidcheck-server
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/name: vidcheck-server
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
---
# Source: vidcheck/templates/studio/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vidcheck-studio
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: vidcheck-studio
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/name: vidcheck-studio
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
# Source: vidcheck/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vidcheck-server
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: vidcheck
      app.kubernetes.io/name: vidcheck-server
  template:
    metadata:
      labels:
        helm.sh/chart: vidcheck-0.1.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: vidcheck
        app.kubernetes.io/instance: vidcheck
        app.kubernetes.io/component: server
        app.kubernetes.io/name: vidcheck-server
        app.kubernetes.io/version: "0.1.0"
    spec:
      serviceAccountName: vidcheck-server
      securityContext:
        {}        
      initContainers:
        - name: server-automigrate
          securityContext:
            {}
          image: "factly/vidcheck-server:0.1.0"
          imagePullPolicy: IfNotPresent
          args: ["migrate"]
          env:
            - name: VIDCHECK_DATABASE_NAME
              value: vidcheck
            - name: VIDCHECK_DATABASE_PORT
              value: "5432"
            - name: VIDCHECK_DATABASE_SSL_MODE
              value: disable
            - name: VIDCHECK_DATABASE_USER
              value: postgres
            - name: VIDCHECK_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database_password
                  name: vidcheck-server
            - name: VIDCHECK_KAVACH_URL
              value: http://kavach-server.dega.svc.cluster.local:8000
            - name: VIDCHECK_DEGA_INTEGRATION
              value: "true"
            - name: VIDCHECK_DEGA_URL
              value: https://dega-server.dega.svc.cluster.local:8000      
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
      containers:
        - name: server
          securityContext:
            {}
          image: "factly/vidcheck-server:0.1.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: VIDCHECK_DATABASE_NAME
              value: vidcheck
            - name: VIDCHECK_DATABASE_PORT
              value: "5432"
            - name: VIDCHECK_DATABASE_SSL_MODE
              value: disable
            - name: VIDCHECK_DATABASE_USER
              value: postgres
            - name: VIDCHECK_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database_password
                  name: vidcheck-server
            - name: VIDCHECK_KAVACH_URL
              value: http://kavach-server.dega.svc.cluster.local:8000
            - name: VIDCHECK_DEGA_INTEGRATION
              value: "true"
            - name: VIDCHECK_DEGA_URL
              value: https://dega-server.dega.svc.cluster.local:8000
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            
            - name: metrics
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: vidcheck/templates/studio/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vidcheck-studio
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: vidcheck-studio
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: vidcheck
      app.kubernetes.io/name: vidcheck-studio
  template:
    metadata:
      labels:
        helm.sh/chart: vidcheck-0.1.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: vidcheck
        app.kubernetes.io/instance: vidcheck
        app.kubernetes.io/component: studio
        app.kubernetes.io/name: vidcheck-studio
        app.kubernetes.io/version: "0.1.0"
    spec:
      serviceAccountName: vidcheck-studio
      securityContext:
        {}
      containers:
        - name: studio
          securityContext:
            {}
          image: "factly/vidcheck-studio:0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
      #     volumeMounts:
      #       - name: vidcheck-studio-config
      #         mountPath: /usr/share/nginx/html/config.js
      #         subPath: config.js
      # volumes:
      #   - name: vidcheck-studio-config
      #     configMap:
      #       name: vidcheck-studio-config
---
# Source: vidcheck/templates/server/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: vidcheck-server
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vidcheck
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
---
# Source: vidcheck/templates/studio/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: vidcheck-studio
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: vidcheck-studio
    app.kubernetes.io/version: "0.1.0"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vidcheck
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
---
# Source: vidcheck/templates/server/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: vidcheck-server
  namespace: dega
  labels:
    helm.sh/chart: vidcheck-0.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: vidcheck
    app.kubernetes.io/instance: vidcheck
    app.kubernetes.io/component: server
    app.kubernetes.io/name: vidcheck-server
    app.kubernetes.io/version: "0.1.0"
    release: monitoring
spec:
  endpoints:
  - interval: 30s
    port: metrics
    scheme: http
  namespaceSelector:
    matchNames:
    - dega
  selector:
    matchLabels:
      app.kubernetes.io/instance: vidcheck
      app.kubernetes.io/name: vidcheck-server
