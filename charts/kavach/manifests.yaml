---
# Source: kavach/templates/web/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kavach-web-config
  namespace: kavach
  labels:
    helm.sh/chart: kavach-0.7.9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
data:
  config.js: |-
    window.PUBLIC_URL = "https://kavach.factly.org"
    window.REACT_APP_KAVACH_TITLE = "NEDC"
    window.REACT_APP_COMPANION_URL = "https://companion.factly.org"
    window.REACT_APP_API_URL = "https://kavach-server.factly.org"
    window.REACT_APP_KRATOS_PUBLIC_URL = "https://kratos.factly.org"
    window.REACT_APP_LOGO_URL = "https://storage.googleapis.com/kavach/nedc-logo.png"
---
# Source: kavach/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kavach-server
  namespace: kavach
  labels:
    helm.sh/chart: kavach-0.7.9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/component: server
    app.kubernetes.io/name: kavach-server
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/name: kavach-server
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
---
# Source: kavach/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kavach-web
  namespace: kavach
  labels:
    helm.sh/chart: kavach-0.7.9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/name: kavach-web
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
# Source: kavach/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavach-server
  namespace: kavach
  labels:
    helm.sh/chart: kavach-0.7.9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/component: server
    app.kubernetes.io/name: kavach-server
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kavach
      app.kubernetes.io/name: kavach-server
  template:
    metadata:
      labels:
        helm.sh/chart: kavach-0.7.9
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kavach
        app.kubernetes.io/instance: kavach
        app.kubernetes.io/component: server
        app.kubernetes.io/name: kavach-server
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: server
          securityContext:
            {}
          image: "factly/kavach-server:0.20.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /health/alive
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            {}
---
# Source: kavach/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavach-web
  namespace: kavach
  labels:
    helm.sh/chart: kavach-0.7.9
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: kavach
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kavach
      app.kubernetes.io/name: kavach-web
  template:
    metadata:
      labels:
        helm.sh/chart: kavach-0.7.9
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kavach
        app.kubernetes.io/instance: kavach
        app.kubernetes.io/component: web
        app.kubernetes.io/name: kavach-web
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: web
          securityContext:
            {}
          image: "factly/kavach-web:0.20.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: PUBLIC_URL
              value: https://kavach.factly.org
            - name: REACT_APP_KAVACH_TITLE
              value: NEDC
            - name: REACT_APP_COMPANION_URL
              value: https://companion.factly.org
            - name: REACT_APP_API_URL
              value: https://kavach-server.factly.org
            - name: REACT_APP_KRATOS_PUBLIC_URL
              value: https://kratos.factly.org
            - name: REACT_APP_LOGO_URL
              value: https://storage.googleapis.com/kavach/nedc-logo.png
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: kavach-web-config
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js
      volumes:
        - name: kavach-web-config
          configMap:
            name: kavach-web-config
