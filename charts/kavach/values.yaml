# Default values for kavach.
# Declare variables to be passed into your templates.

nameOverride: kavach
fullnameOverride: kavach

## Override the deployment namespace
namespaceOverride: dega

imagePullSecrets: []

global:
  image:
    tag: ""
    imagePullPolicy: IfNotPresent
  securityContext: {}
    # runAsUser: 999
    # runAsGroup: 999
    # fsGroup: 999

server:
  name: server

  image:
    repository: factly/kavach-server
    pullPolicy: IfNotPresent
    tag: ""

  # imagePullSecrets: []

  # This value will be ignored if Autoscaling is enabled
  replicaCount: 1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  autoMigrate: false
  createSuperOrg: false

  ## Environment variables to pass to kavach Server
  env: []
    # Setup IMGPROXY usage within the cluster
    # - name: KAVACH_IMAGEPROXY_URL
    #   value: "https://images.factly.org"
    # - name: KAVACH_MODE
    #   value: "development"
    # - name: KAVACH_KETO_URL
    #   value: "http://keto.dega.svc.cluster.local:4466"
    # - name: KAVACH_DATABASE_HOST
    #   value: "kavach-postgresql.dega.svc.cluster.local"
    # - name: KAVACH_DATABASE_NAME
    #   value: "kavach"
    # - name: KAVACH_DATABASE_PORT
    #   value: "5432"
    # - name: KAVACH_DATABASE_USER
    #   value: "postgres"    
    # - name: KAVACH_DATABASE_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: kavach-server
    #       key: database_password
    # - name: KAVACH_DATABASE_SSL_MODE
    #   value: "disable"
    # - name: KAVACH_SENDGRID_API_KEY
    #   valueFrom:
    #     secretKeyRef:
    #       name: sendgrid
    #       key: kavach        
    # - name: KAVACH_DOMAIN_NAME
    #   value: "https://kavach.factly.org"     

  ## TODO: THIS IS NOT IMPLEMENTED YET 
  ## CURRENTLY THIS IS SUPPORTED BY THE FILES IN data/server/applications.json
  defaultApplications: ""
  ## ConfigMap containing the default applications
  ## For Example:
  # defaultApplications: |-
  #   [
  #     {
  #         "name": "Dega",
  #         "slug": "dega",
  #         "url": "https://dega.example.com/",
  #         "is_default": true
  #     },
  #     {
  #         "name": "Dataful",
  #         "slug": "dataful",
  #         "url": "https://dataful.example.com/",
  #         "is_default": true
  #     }
  #   ]  

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # Labels to add to the service account
    labels: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "kavach-server"

  podAnnotations: {}

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  configAnnotations: {}

  service:
    type: ClusterIP
    port: 8000
    portName: http
    annotations: {}
    labels: {}

  metrics:
    enabled: false

    service:
      type: ClusterIP
      port: 8001
      portName: metrics
      annotations: {}
      labels: {}

    serviceMonitor:
      enabled: false
      selector:
        # prometheus: kube-prometheus
        release: monitoring
      labels: {}
      interval: 30s

      scheme: http
      tlsConfig: {}
      scrapeTimeout: 30s
      relabelings: []    

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.

    # limits:
    #   cpu: 500m
    #   memory: 1024Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## Readiness and liveness probes for default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  ##
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10
  livenessProbe:
    initialDelaySeconds: 50
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10

  nodeSelector: {}

  tolerations: []

  affinity: {}

web:
  name: web

  image:
    repository: factly/kavach-web
    pullPolicy: IfNotPresent
    tag: ""

  # imagePullSecrets: []

  # This value will be ignored if Autoscaling is enabled
  replicaCount: 1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  ## Environment variables to pass to kavach web
  env: []
    # - name: REACT_APP_KAVACH_TITLE
    #   value: "Kavach"
    # - name: REACT_APP_COMPANION_URL
    #   value: "https://companion.example.com"
    # - name: REACT_APP_API_URL
    #   value: "https://kavach-server.example.com"      
    # - name: REACT_APP_KRATOS_PUBLIC_URL
    #   value: "https://kratos.example.com"
    # - name: REACT_APP_LOGO_URL
    #   value: "https://link-to-your-logo.png"

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # Labels to add to the service account
    labels: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "kavach-web"

  podAnnotations: {}

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  configAnnotations: {}

  service:
    # type: ClusterIP
    type: NodePort
    port: 80
    portName: http
    annotations: {}
    labels: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 500m
    #   memory: 1024Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## Readiness and liveness probes for default backend
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
  ##
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10
  livenessProbe:
    initialDelaySeconds: 50
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Setup the default authentication parameters (postgesPassword which is set to `postgres`)
# Change the `PGPASSWORD` accordingly in the `primary.initdb.scripts.my_init_script.sh`
postgresql:
  enabled: false

  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 14.2.0-debian-10-r33

  ## Authentication parameters
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#setting-the-root-password-on-first-run
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    ##
    enablePostgresUser: true

    ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials
    ## `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret
    ## The secret must contain the keys `postgres-password` (which is the password for "postgres" admin user),
    ## `password` (which is the password for the custom user to create when `auth.username` is set),
    ## and `replication-password` (which is the password for replication user).
    ## The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and
    ## picked from this secret in this case.
    ## The value is evaluated as a template.
    ##
    postgresPassword: "postgres"
    username: ""
    password: ""
    database: ""
    existingSecret: ""    

  ## @param architecture PostgreSQL architecture (`standalone` or `replication`)
  ##
  architecture: standalone

  ## @section PostgreSQL Primary parameters
  ##
  primary:

    ## Initdb configuration
    ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#specifying-initdb-arguments
    ##
    initdb:
      scripts:
        my_init_script.sh: |
          #!/bin/bash

          set -e
          set -u

          POSTGRES_MULTIPLE_DATABASES="kratos,keto,kavach,dega"
          POSTGRES_USER="postgres"
          PGPASSWORD="postgres"

          function create_user_and_database() {
            local database=$1
            echo "Creating user and database '$database'"
            psql -v ON_ERROR_STOP=1 <<-EOSQL
                CREATE USER $database;
                CREATE DATABASE $database;
                GRANT ALL PRIVILEGES ON DATABASE $database TO $database;
          EOSQL
          }

          if [ -n "$POSTGRES_MULTIPLE_DATABASES" ]; then
            echo "Multiple database creation requested: $POSTGRES_MULTIPLE_DATABASES"
            for db in $(echo $POSTGRES_MULTIPLE_DATABASES | tr ',' ' '); do
              create_user_and_database $db
            done
            echo "Multiple databases created"
          fi    

    ## PostgreSQL Primary resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param primary.resources.limits The resources limits for the PostgreSQL Primary containers
    ## @param primary.resources.requests.memory The requested memory for the PostgreSQL Primary containers
    ## @param primary.resources.requests.cpu The requested cpu for the PostgreSQL Primary containers
    ##
    resources:
      limits: {}
      requests:
        memory: 256Mi
        cpu: 250m

minio:
  enabled: false

  ## minio server mode, i.e. standalone or distributed.
  ## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
  ##
  # mode: standalone
  mode: distributed

  ## Update strategy for Deployments
  DeploymentUpdate:
    type: RollingUpdate
    maxUnavailable: 0
    maxSurge: 100%

  ## Update strategy for StatefulSets
  StatefulSetUpdate:
    updateStrategy: RollingUpdate

  ## Use existing Secret that store following variables:
  ##
  ## | Chart var             | .data.<key> in Secret    |
  ## |:----------------------|:-------------------------|
  ## | accessKey             | accesskey                |
  ## | secretKey             | secretkey                |
  ## | gcsgateway.gcsKeyJson | gcs_key.json             |
  ## | s3gateway.accessKey   | awsAccessKeyId           |
  ## | s3gateway.secretKey   | awsSecretAccessKey       |
  ## | etcd.clientCert       | etcd_client_cert.pem     |
  ## | etcd.clientCertKey    | etcd_client_cert_key.pem |
  ##
  ## All mentioned variables will be ignored in values file.
  ## .data.accesskey and .data.secretkey are mandatory,
  ## others depend on enabled status of corresponding sections.
  existingSecret: "minio"

  # Number of MinIO containers running
  replicas: 4
  # Number of expanded MinIO clusters
  zones: 1

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## minio data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClass: ""
    VolumeName: ""
    accessMode: ReadWriteOnce
    size: 10Gi

    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
    ##
    subPath: ""

  ## Expose the Minio service to be accessed from outside the cluster (LoadBalancer service).
  ## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
  ## ref: http://kubernetes.io/docs/user-guide/services/
  ##

  service:
    type: ClusterIP
    clusterIP: ~
    port: 9000
    nodePort: 32000

    ## List of IP addresses at which the Prometheus server service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []
    #   - externalIp1

    annotations: {}
      # prometheus.io/scrape: 'true'
      # prometheus.io/path:   '/minio/prometheus/metrics'
      # prometheus.io/port:   '9000'


  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Additational pod annotations
  podAnnotations: {}

  # Additional pod labels
  podLabels: {}

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
    memory: 1Gi
    cpu: 250m
  limits:
    memory: 4Gi
    cpu: 1

  ## Create a bucket after minio install
  ##
  defaultBucket:
    enabled: true
    ## If enabled, must be a string with length > 0
    name: dega
    ## Can be one of none|download|upload|public
    policy: download
    ## Purge if bucket exists already
    purge: false
    ## set versioning for bucket true|false
    # versioning: false

  # environment:
  #   MINIO_PROMETHEUS_AUTH_TYPE: "public"

  metrics:
    # Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: monitoring
      # namespace: dega
      # interval: 30s
      # scrapeTimeout: 10s

imgproxy:
  enabled: false

# If enabled, `kratos.kratos.config.dsn` needs to be configured appropriately
# `kratos.kratos.config.dsn` needs to be set to the database url appropriately
kratos:
  enabled: false

  replicaCount: 1

  image:
    repository: oryd/kratos
    tag: v0.10.1

  nameOverride: "kratos"
  fullnameOverride: "kratos"

  secret:
    # -- switch to false to prevent creating the secret
    enabled: true
    # -- Provide custom name of existing secret, or custom name of secret to be created
    nameOverride: "kratos"
    # nameOverride: "myCustomSecret"
    # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
    secretAnnotations:
      # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
      # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
      helm.sh/hook-weight: "0"
      helm.sh/hook: "pre-install, pre-upgrade"
      helm.sh/hook-delete-policy: "before-hook-creation"
      helm.sh/resource-policy: "keep"

  kratos:
    development: false
    # -- Enable the initialization job. Required to work with a DB

    # -- Enables database migration
    automigration:
      enabled: true
      # -- Configure the way to execute database migration. Possible values: job, initContainer
      # When set to job, the migration will be executed as a job on release or upgrade.
      # When set to initContainer, the migration will be executed when kratos pod is created
      # Defaults to job
      type: job
      # -- Ability to override the entrypoint of the automigration container
      # (e.g. to source dynamic secrets or export environment dynamic variables)
      customCommand: []
      # -- Ability to override arguments of the entrypoint. Can be used in-depended of customCommand 
      # eg:
      # - sleep 5;
      #   - kratos
      customArgs: []

    config:
      dsn: postgres://postgres:postgres@kavach-postgresql-0.default.svc.cluster.local:5432/kratos

      serve:
        public:
          base_url: https://kratos.example.com
          cors:
            enabled: true
            allowed_origins:
              - "https://example.com"
              - "https://*.example.com"
              - "https://www.*.example.com"
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Authorization
              - Content-Type
              - X-Session-Token
              - Cookie
            exposed_headers:
              - Content-Type
              - Set-Cookie
            allow_credentials: true
            debug: true
        admin:
          base_url: http://kratos-admin.dega.svc.cluster.local:80/

      selfservice:
        default_browser_return_url: https://login.example.com/organisation
        allowed_return_urls:
          - https://example.com
          - http://example.com        
          - https://dega-server.example.com
          - https://dega.example.com
          - http://dega.example.com
          - https://login.example.com
          - http://login.example.com
          - https://kavach-server.example.com
        methods:
          password:
            enabled: true
          oidc:
            enabled: true
            config:
              providers: []

          link:
            enabled: true
            config:
              lifespan: 15m
          totp:
            enabled: true
            config:
              issuer: example.com

        flows:
          error:
            ui_url: https://login.example.com/error
          settings:
            ui_url: https://login.example.com/password
            privileged_session_max_age: 15m
            required_aal: highest_available
          logout:
            after:
              default_browser_return_url: https://login.example.com/auth/login
          login:
            ui_url: https://login.example.com/auth/login
            lifespan: 10m
            # after:
            #   password:
            #     hooks:
            #       - hook: require_verified_address
          # verification:
          #   enabled: true
          #   ui_url: https://login.example.com/auth/verification
          registration:
            after:
              default_browser_return_url: https://login.example.com/auth/login
            lifespan: 10m
            ui_url: https://login.example.com/auth/registration
          recovery:
            enabled: true
            ui_url: https://login.example.com/auth/recovery

      log:
        level: debug

      session:
        cookie:
          domain: example.com
          # same_site: Lax
          # path: /

      secrets:
        default:
          - ipsumipsumipsumi
        cookie:
          - ipsumipsumipsumi
        cipher:
          - ipsumipsumipsumipsumipsumipsumip          

      hashers:
        # argon2:
        #   parallelism: 1
        #   memory: 131072
        #   iterations: 2
        #   salt_length: 16
        #   key_length: 16
        bcrypt:
          cost: 12

      identity:
        default_schema_id: default
        schemas:
          - id: default
            url: https://storage.googleapis.com/login-example-com/kratos/identity.traits.schema.json

      courier:
        smtp: 
          connection_uri: smtps://foo:bar@my-mailserver:1234/?skip_ssl_verify=false
          from_name: "Kavach"
          from_address: kavach@example.com

  ## -- Configuration options for the k8s deployment
  deployment:
    # -- Array of extra envs to be passed to the deployment. Kubernetes format is expected
    # - name: FOO
    #   value: BAR
    # extraEnv:
    #   - name: SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS
    #     valueFrom:
    #       secretKeyRef:
    #         name: kratos-oidc-providers
    #         key: oidc-config.json

    resources: {}
      #  We usually recommend not to specify default resources and to leave this as a conscious
      #  choice for the user. This also increases chances charts run on environments with little
      #  resources, such as Minikube. If you do want to specify resources, uncomment the following
      #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #  limits:
    #    cpu: 100m
    #    memory: 128Mi
    #  requests:
    #    cpu: 100m
    #  memory: 128Mi      

# If enabled, `oathkeeper.oathkeeper.config` needs to be configured appropriately
oathkeeper:
  enabled: false

  # Number of ORY Oathkeeper members
  replicaCount: 1

  image:
    # ORY Oathkeeper version
    tag: v0.38.4-beta.1

  oathkeeper:
    config:
      log:
        level: debug
        format: json

      serve:
        proxy:
          port: 4455
          cors:
            enabled: true
            allowed_origins:
              - "https://*.example.com"
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Authorization
              - Content-Type
              - Cookie
              - X-Session-Token
              - X-User
              - X-Space
              - X-Organisation
            exposed_headers:
              - Content-Type
              - Set-Cookie
            allow_credentials: true
            debug: true
        api:
          port: 4456

      access_rules:
        repositories:
          - https://storage.googleapis.com/login-example-com/oathkeeper/access-rules/kavach-server.json
          - https://storage.googleapis.com/login-example-com/oathkeeper/access-rules/kavach-web.json
          - https://storage.googleapis.com/login-example-com/oathkeeper/access-rules/kratos.json
          - https://storage.googleapis.com/login-example-com/oathkeeper/access-rules/dega-server.json
          - https://storage.googleapis.com/login-example-com/oathkeeper/access-rules/dega-studio.json

      errors:
        fallback:
          - json

        handlers:
          redirect:
            enabled: true
            config:
              to: "https://login.example.com/auth/login"
              when:
                -
                  error:
                    - unauthorized
                    - forbidden
                  request:
                    header:
                      accept:
                        - text/html
          json:
            enabled: true
            config:
              verbose: true


      authenticators:

        anonymous:
          enabled: true
          config:
            subject: guest
            
        cookie_session:
          enabled: true
          config:
            check_session_url: http://kratos-public.dega.svc.cluster.local:80/sessions/whoami
            preserve_path: true
            extra_from: "@this"
            subject_from: "identity.id"
            only:
              - ory_kratos_session

        noop:
          enabled: true

      authorizers:
        allow:
          enabled: true
        keto_engine_acp_ory:
          enabled: true

          config:
            base_url: http://keto.dega.svc.cluster.local:4466/
            required_action: ...
            required_resource: ...
            subject: ...
            flavor: ...

      mutators:
        noop:
          enabled: true

        id_token:
          enabled: true
          config:
            issuer_url: https://example.com/
            jwks_url: https://storage.googleapis.com/login-example-com/oathkeeper/id_token.jwks.json
            claims: |
              {
                "session": {{ .Extra | toJson }}
              }
              
        header:
          enabled: true
          config:
            headers:
              X-Kratos: '{{ print .Subject }}'
              
        hydrator:
          enabled: true
          config:
            api:
              url: http://kavach-server.dega.svc.cluster.local:8000/users/checker
              retry:
                give_up_after: 2s
                max_delay: 100ms
            cache:
              ttl: 60s

  deployment:
    resources: {}
    #  We usually recommend not to specify default resources and to leave this as a conscious
    #  choice for the user. This also increases chances charts run on environments with little
    #  resources, such as Minikube. If you do want to specify resources, uncomment the following
    #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 1
      #   memory: 4Gi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi              

    # -- PodDistributionBudget configuration
    pdb:
      enabled: true
      spec:
        minAvailable: 1                

# If enabled, `keto.keto.config` needs to be configured appropriately
# If enabled, `keto.keto.config.dsn` needs to be set to the database url appropriately
keto:
  enabled: false

  # Default values for keto.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  # -- Number of replicas in deployment
  replicaCount: 1

  image:
    # -- Ory KETO image
    repository: oryd/keto
    # -- Default image pull policy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # -- Ory KETO version
    tag: "v0.9.0"

  nameOverride: "keto"
  fullnameOverride: "keto"

  # -- Secret management
  secret:
    # -- Switch to false to prevent creating the secret
    enabled: true
    # -- Provide custom name of existing secret, or custom name of secret to be created
    nameOverride: "keto"
    # nameOverride: "myCustomSecret"
    # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
    secretAnnotations:
      # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
      # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
      helm.sh/hook-weight: "0"
      helm.sh/hook: "pre-install, pre-upgrade"
      helm.sh/hook-delete-policy: "before-hook-creation"
      helm.sh/resource-policy: "keep"
    # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
    hashSumEnabled: true

  # -- Main application config.
  keto:
    # -- Enables database migration
    automigration:
      enabled: true
      # -- Configure the way to execute database migration. Possible values: job, initContainer
      # When set to job, the migration will be executed as a job on release or upgrade.
      # When set to initContainer, the migration will be executed when kratos pod is created
      # Defaults to job  
      type: job
      # -- Ability to override the entrypoint of the automigration container
      # (e.g. to source dynamic secrets or export environment dynamic variables)
      customCommand: []
      # -- Ability to override arguments of the entrypoint. Can be used in-depended of customCommand 
      # eg:
      # - sleep 5;
      #   - keto
      customArgs: []
    # -- Direct keto config. Full documentation can be found in https://www.ory.sh/keto/docs/reference/configuration
    config:
      serve:
        read:
          port: 4466
        write:
          port: 4467
        metrics:
          port: 4468
      namespaces:
        - id: 0
          name: organisations
        - id: 1
          name: applications
        - id: 2
          name: spaces
        - id: 3
          name: superorganisation          
      dsn: postgres://postgres:postgres@kavach-postgresql-0.default.svc.cluster.local:5432/keto

  # -- Configure the probes for when the deployment is considered ready and ongoing health check
  deployment:

    resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    # -- Autoscaling for keto deployment
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

  # -- PodDistributionBudget configuration
  pdb:
    enabled: false
    spec:
      minAvailable: 1

companion:
  enabled: false