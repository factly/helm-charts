---
# Source: dega/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dega-server
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: server
    app.kubernetes.io/name: dega-server
    app.kubernetes.io/version: ""
---
# Source: dega/templates/server/configmaps/configmap-data.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dega-server-data
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: server
    app.kubernetes.io/name: dega-server
    app.kubernetes.io/version: ""
data:
  events.json: |-
    [
        {
            "name": "Create Category",
            "event": "category.created"
        },
        {
            "name": "Update Category",
            "event": "category.updated"
        },
        {
            "name": "Delete Category",
            "event": "category.deleted"
        },
        {
            "name": "Create Format",
            "event": "format.created"
        },
        {
            "name": "Update Format",
            "event": "format.updated"
        },
        {
            "name": "Delete Format",
            "event": "format.deleted"
        },
        {
            "name": "Create Media",
            "event": "media.created"
        },
        {
            "name": "Update Media",
            "event": "media.updated"
        },
        {
            "name": "Delete Media",
            "event": "media.deleted"
        },
        {
            "name": "Create Menu",
            "event": "menu.created"
        },
        {
            "name": "Update Menu",
            "event": "menu.updated"
        },
        {
            "name": "Delete Menu",
            "event": "menu.deleted"
        },
        {
            "name": "Create Post",
            "event": "post.created"
        },
        {
            "name": "Update Post",
            "event": "post.updated"
        },
        {
            "name": "Delete Post",
            "event": "post.deleted"
        },
        {
            "name": "Create Template",
            "event": "post.template.created"
        },
        {
            "name": "Publish Post",
            "event": "post.published"
        },
        {
            "name": "Unpublish Post",
            "event": "post.unpublished"
        },
        {
            "name": "Ready Post",
            "event": "post.ready"
        },
        {
            "name": "Create Space",
            "event": "space.created"
        },
        {
            "name": "Update Space",
            "event": "space.updated"
        },
        {
            "name": "Delete Space",
            "event": "space.deleted"
        },
        {
            "name": "Create Tag",
            "event": "tag.created"
        },
        {
            "name": "Update Tag",
            "event": "tag.updated"
        },
        {
            "name": "Delete Tag",
            "event": "tag.deleted"
        },
        {
            "name": "Create Claim",
            "event": "claim.created"
        },
        {
            "name": "Update Claim",
            "event": "claim.updated"
        },
        {
            "name": "Delete Claim",
            "event": "claim.deleted"
        },
        {
            "name": "Create Claimant",
            "event": "claimant.created"
        },
        {
            "name": "Update Claimant",
            "event": "claimant.updated"
        },
        {
            "name": "Delete Claimant",
            "event": "claimant.deleted"
        },
        {
            "name": "Create Rating",
            "event": "rating.created"
        },
        {
            "name": "Update Rating",
            "event": "rating.updated"
        },
        {
            "name": "Delete Rating",
            "event": "rating.deleted"
        },
        {
            "name": "Create Podcast",
            "event": "podcast.created"
        },
        {
            "name": "Update Podcast",
            "event": "podcast.updated"
        },
        {
            "name": "Delete Podcast",
            "event": "podcast.deleted"
        },
        {
            "name": "Create Episode",
            "event": "episode.created"
        },
        {
            "name": "Update Episode",
            "event": "episode.updated"
        },
        {
            "name": "Delete Episode",
            "event": "episode.deleted"
        },
        {
            "name": "Create Policy",
            "event": "policy.created"
        },
        {
            "name": "Update Policy",
            "event": "policy.updated"
        }
    ]
  formats.json: |-
    [
        {
            "name": "Article",
            "slug": "article",
            "description": "Article"
        },
        {
            "name": "Fact Check",
            "slug": "fact-check",
            "description": "Fact Check"
        }
    ]
  policies.json: |-
    [
        {
            "name": "Editor",
            "Description": "Editor",
            "permissions": [
                {
                    "resource": "categories",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "tags",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "formats",
                    "actions": ["get"]
                },
                {
                    "resource": "media",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "posts",
                    "actions": ["get", "create", "update", "delete", "publish"]
                },
                {
                    "resource": "claimants",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "ratings",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "claims",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "fact-checks",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "policies",
                    "actions": ["get"]
                }
            ]
        },
        {
            "name": "Author",
            "Description": "Author",
            "permissions": [
                {
                    "resource": "categories",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "tags",
                    "actions": ["get", "create", "update", "delete"]
                },
                {
                    "resource": "formats",
                    "actions": ["get"]
                },
                {
                    "resource": "media",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "posts",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "claimants",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "ratings",
                    "actions": ["get"]
                },
                {
                    "resource": "claims",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "fact-checks",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "policies",
                    "actions": ["get"]
                }
            ]
        },
        {
            "name": "Contributor",
            "Description": "Contributor",
            "permissions": [
                {
                    "resource": "formats",
                    "actions": ["get"]
                },
                {
                    "resource": "media",
                    "actions": ["get", "create"]
                },
                {
                    "resource": "posts",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "claimants",
                    "actions": ["get", "create"]
                },
                {
                    "resource": "ratings",
                    "actions": ["get"]
                },
                {
                    "resource": "claims",
                    "actions": ["get", "create", "update"]
                },
                {
                    "resource": "fact-checks",
                    "actions": ["get", "create", "update"]
                }
            ]
        }
    ]
  ratings.json: "[\n    {\n        \"name\": \"True\",\n        \"slug\": \"true\",\n
    \       \"description\": {\n            \"blocks\": [\n                {\"type\":\"paragraph\",
    \"data\": {\"text\": \"True\"}}\n            ]\n        },\n        \"numeric_value\":
    5,\n        \"background_colour\": {\n            \"hex\": \"#108040\",\n            \"hsl\":
    {\n                \"h\": 145.7142857142857, \n                \"s\": 0.7777777777777778,
    \n                \"l\": 0.2823529411764706, \n                \"a\": 1\n            },\n
    \           \"hsv\": {\n                \"h\": 145.7142857142857, \n                \"s\":
    0.875, \n                \"v\": 0.5019607843137255, \n                \"a\": 1\n
    \           },\n            \"oldHue\": 250,\n            \"rgb\": {\n                \"r\":
    16, \n                \"g\": 128, \n                \"b\": 64, \n                \"a\":
    1\n            },\n            \"source\": \"hex\"\n        },\n        \"text_colour\":
    {\n            \"hsl\": {\n              \"h\": 0,\n              \"s\": 0,\n              \"l\":
    0.9568627450980393,\n              \"a\": 1\n            },\n            \"hex\":
    \"#f4f4f4\",\n            \"rgb\": {\n              \"r\": 244,\n              \"g\":
    244,\n              \"b\": 244,\n              \"a\": 1\n            },\n            \"hsv\":
    {\n              \"h\": 0,\n              \"s\": 0,\n              \"v\": 0.9568627450980393,\n
    \             \"a\": 1\n            },\n            \"oldHue\": 0,\n            \"source\":
    \"hex\"\n        }    \n    },\n    {\n        \"name\": \"Partly True\",\n        \"slug\":
    \"partly-true\",\n        \"description\": {\n            \"blocks\": [\n                {\"type\":\"paragraph\",
    \"data\": {\"text\": \"Partly True\"}}\n            ]\n        },\n        \"numeric_value\":
    4,\n        \"background_colour\": {\n            \"hex\": \"#a5c239\",\n            \"hsl\":
    {\n                \"h\": 72.70072992700729, \n                \"s\": 0.545816733067729,
    \n                \"l\": 0.492156862745098, \n                \"a\": 1\n            },\n
    \           \"hsv\": {\n                \"h\": 72.70072992700729, \n                \"s\":
    0.7061855670103093, \n                \"v\": 0.7607843137254902, \n                \"a\":
    1\n            },\n            \"oldHue\": 250,\n            \"rgb\": {\n                \"r\":
    165, \n                \"g\": 194, \n                \"b\": 57, \n                \"a\":
    1\n            },\n            \"source\": \"hex\"\n        },\n        \"text_colour\":
    {\n            \"hsl\": {\n              \"h\": 0,\n              \"s\": 0,\n              \"l\":
    0.058823529411764705,\n              \"a\": 1\n            },\n            \"hex\":
    \"#0f0f0f\",\n            \"rgb\": {\n              \"r\": 15,\n              \"g\":
    15,\n              \"b\": 15,\n              \"a\": 1\n            },\n            \"hsv\":
    {\n              \"h\": 0,\n              \"s\": 0,\n              \"v\": 0.058823529411764705,\n
    \             \"a\": 1\n            },\n            \"oldHue\": 0,\n            \"source\":
    \"hex\"\n          }\n    },\n    {\n        \"name\": \"Unverified\",\n        \"slug\":
    \"unverified\",\n        \"description\": {\n            \"blocks\": [\n                {\"type\":\"paragraph\",
    \"data\": {\"text\": \"Unverified\"}}\n            ]\n        },\n        \"numeric_value\":
    3,\n        \"background_colour\": {\n            \"hex\": \"#eca124\",\n            \"hsl\":
    {\n                \"h\": 37.49999999999999, \n                \"s\": 0.8403361344537816,
    \n                \"l\": 0.5333333333333333, \n                \"a\": 1\n            },\n
    \           \"hsv\": {\n                \"h\": 37.49999999999999, \n                \"s\":
    0.8474576271186441, \n                \"v\": 0.9254901960784314,\n                \"a\":
    1\n            },\n            \"oldHue\": 250,\n            \"rgb\": {\n                \"r\":
    236, \n                \"g\": 161, \n                \"b\": 36, \n                \"a\":
    1\n            }\n        },\n        \"text_colour\": {\n            \"hsl\": {\n
    \             \"h\": 0,\n              \"s\": 0,\n              \"l\": 0.058823529411764705,\n
    \             \"a\": 1\n            },\n            \"hex\": \"#0f0f0f\",\n            \"rgb\":
    {\n              \"r\": 15,\n              \"g\": 15,\n              \"b\": 15,\n
    \             \"a\": 1\n            },\n            \"hsv\": {\n              \"h\":
    0,\n              \"s\": 0,\n              \"v\": 0.058823529411764705,\n              \"a\":
    1\n            },\n            \"oldHue\": 0,\n            \"source\": \"hex\"\n
    \         }\n    },\n    {\n        \"name\": \"Misleading\",\n        \"slug\":
    \"misleading\",\n        \"description\": {\n            \"blocks\": [\n                {\"type\":\"paragraph\",
    \"data\": {\"text\": \"Misleading\"}}\n            ]\n        },\n        \"numeric_value\":
    2,\n        \"background_colour\": {\n            \"hex\": \"#749990\",\n            \"hsl\":
    {\n                \"h\": 165.40540540540542, \n                \"s\": 0.15352697095435683,
    \n                \"l\": 0.5274509803921569, \n                \"a\": 1\n            },\n
    \           \"hsv\": {\n                \"h\": 165.40540540540542, \n                \"s\":
    0.2418300653594771, \n                \"v\": 0.6, \n                \"a\": 1\n            },\n
    \           \"oldHue\": 250,\n            \"rgb\": {\n                \"r\": 116,
    \n                \"g\": 153, \n                \"b\": 144, \n                \"a\":
    1\n            },\n            \"source\": \"hex\" \n        },\n        \"text_colour\":
    {\n            \"hsl\": {\n              \"h\": 0,\n              \"s\": 0,\n              \"l\":
    0.058823529411764705,\n              \"a\": 1\n            },\n            \"hex\":
    \"#0f0f0f\",\n            \"rgb\": {\n              \"r\": 15,\n              \"g\":
    15,\n              \"b\": 15,\n              \"a\": 1\n            },\n            \"hsv\":
    {\n              \"h\": 0,\n              \"s\": 0,\n              \"v\": 0.058823529411764705,\n
    \             \"a\": 1\n            },\n            \"oldHue\": 0,\n            \"source\":
    \"hex\"\n          }\n    },\n    {\n        \"name\": \"False\",\n        \"slug\":
    \"false\",\n        \"description\": {\n            \"blocks\": [\n                {\"type\":\"paragraph\",
    \"data\": {\"text\": \"False\"}}\n            ]\n        },\n        \"numeric_value\":
    1,\n        \"background_colour\": {\n            \"hex\": \"#e82728\",\n            \"hsl\":
    {\n                \"h\": 359.68911917098444, \n                \"s\": 0.8075000000000001,
    \n                \"l\": 0.5313, \n                \"a\": 0.01\n            },\n
    \           \"hsv\": {\n                \"h\": 359.68911917098444, \n                \"s\":
    0.8320192267266009, \n                \"v\": 0.90977525, \n                \"a\":
    0.01\n            },\n            \"oldHue\": 359.68911917098444,\n            \"rgb\":
    {\n                \"r\": 232, \n                \"g\": 39, \n                \"b\":
    40, \n                \"a\": 0.01\n            },\n            \"source\": \"rgb\"\n
    \       },\n        \"text_colour\": {\n            \"hsl\": {\n              \"h\":
    0,\n              \"s\": 0,\n              \"l\": 0.9568627450980393,\n              \"a\":
    1\n            },\n            \"hex\": \"#f4f4f4\",\n            \"rgb\": {\n              \"r\":
    244,\n              \"g\": 244,\n              \"b\": 244,\n              \"a\":
    1\n            },\n            \"hsv\": {\n              \"h\": 0,\n              \"s\":
    0,\n              \"v\": 0.9568627450980393,\n              \"a\": 1\n            },\n
    \           \"oldHue\": 0,\n            \"source\": \"hex\"\n        }\n    }\n]\n"
---
# Source: dega/templates/server/configmaps/configmap-web.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dega-server-web
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: server
    app.kubernetes.io/name: dega-server
    app.kubernetes.io/version: ""
data:
  description.gohtml: "{{range .}}\n{{if eq .type \"paragraph\"}} \n    <p>{{noesc .data.text}}</p>\n\n{{else
    if eq .type \"header\"}}\n    <h{{.data.level}}>{{.data.text}}</h{{.data.level}}>\n\n{{else
    if eq .type \"list\"}}\n    {{if eq .data.style \"ordered\"}}\n    <ol>\n        {{range
    .data.items}}\n        <li>{{.}}</li>\n        {{end}}\n    </ol>\n    {{else if
    eq .data.style \"unordered\"}}\n    <ul>\n        {{range .data.items}}\n        <li>{{.}}</li>\n
    \       {{end}}\n    </ul>\n    {{end}}\n\n{{else if eq .type \"quote\"}}\n    <blockquote>{{.data.text}}</blockquote>\n\n{{else
    if eq .type \"raw\"}}\n    {{noesc .data.html}}\n\n{{else if eq .type \"code\"}}\n
    \   <pre>\n    <code style=\"display:block\">\n        {{.data.code}}\n    </code>\n
    \   </pre>\n\n{{else if eq .type \"delimiter\"}}\n    <hr>\n\n{{else if eq .type
    \"uppy\"}}\n    {{if multipleImgs .data}}\n        {{range .data.nodes}}\n            <div
    class=\"image\">\n            <img src=\"{{if .url.proxy}} {{.url.proxy}} {{else}}
    {{.url.raw}} {{end}}\" id=\"{{.slug}}\" alt=\"{{.alt_text}}\">\n            <p>{{.caption}}</p>\n
    \           </div>\n        {{end}}\n\n    {{else}}\n        <div class=\"image\">\n
    \       <img src=\"{{if .data.url.proxy}} {{.data.url.proxy}} {{else}} {{.data.url.raw}}
    {{end}}\" id=\"{{.data.slug}}\" alt=\"{{.data.alt_text}}\">\n        <p>{{.data.caption}}</p>\n
    \       </div>\n    {{end}}\n\n{{else if eq .type \"table\"}}\n    <table style=\"border:
    1px solid black; width: 50%;\">\n    {{range $index, $element := .data.content}}\n
    \       <tr>\n        \n        {{range $element}}\n        \n        {{if eq $index
    0}}<th>{{else}} <td> {{end}} {{.}} {{if eq $index 0}}</td>{{else}} </th> {{end}}\n
    \       {{end}}\n        \n        </tr>\n    {{end}}\n    </table>  \n\n{{else
    if eq .type \"embed\"}}\n    {{noesc .data.html}}\n\n{{end}}\n{{end}}"
---
# Source: dega/templates/studio/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dega-studio-config
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: dega-studio
    app.kubernetes.io/version: ""
data:
  config.js: |-
    window.REACT_APP_KRATOS_PUBLIC_URL = "https://kratos.factly.org";
    window.REACT_APP_API_URL = "https://dega-server.factly.org";
    window.REACT_APP_COMPANION_URL = "https://companion.factly.org";
    window.PUBLIC_URL = "https://dega.factly.org";
    window.REACT_APP_KAVACH_PUBLIC_URL = 'https://kavach.factly.org';
---
# Source: dega/templates/api/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dega-api
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: api
    app.kubernetes.io/name: dega-api
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: dega
    app.kubernetes.io/name: dega-api
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
---
# Source: dega/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dega-server
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: server
    app.kubernetes.io/name: dega-server
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: dega
    app.kubernetes.io/name: dega-server
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 8002
      targetPort: 8002
      protocol: TCP
      name: feeds
---
# Source: dega/templates/studio/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dega-studio
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: dega-studio
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: dega
    app.kubernetes.io/name: dega-studio
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
# Source: dega/templates/api/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dega-api
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: api
    app.kubernetes.io/name: dega-api
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: dega
      app.kubernetes.io/name: dega-api
  template:
    metadata:
      labels:
        helm.sh/chart: dega-0.10.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: dega
        app.kubernetes.io/instance: dega
        app.kubernetes.io/component: api
        app.kubernetes.io/name: dega-api
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: api
          securityContext:
            {}
          image: "factly/dega-api:0.15.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            {}
---
# Source: dega/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dega-server
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: server
    app.kubernetes.io/name: dega-server
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: dega
      app.kubernetes.io/name: dega-server
  template:
    metadata:
      labels:
        helm.sh/chart: dega-0.10.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: dega
        app.kubernetes.io/instance: dega
        app.kubernetes.io/component: server
        app.kubernetes.io/name: dega-server
        app.kubernetes.io/version: ""
    spec:
      serviceAccountName: dega-server
      securityContext:
        {}
      containers:
        - name: server
          securityContext:
            {}
          image: "factly/dega-server:0.15.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /health/alive
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            {}
          volumeMounts:
            - name: dega-server-data
              mountPath: ./data
            - name: dega-server-web
              mountPath: ./web/templates          
      volumes:
        - name: dega-server-data
          configMap:
            name: dega-server-data
        - name: dega-server-web
          configMap:
            name: dega-server-web
---
# Source: dega/templates/studio/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dega-studio
  namespace: dega
  labels:
    helm.sh/chart: dega-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: dega
    app.kubernetes.io/instance: dega
    app.kubernetes.io/component: studio
    app.kubernetes.io/name: dega-studio
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: dega
      app.kubernetes.io/name: dega-studio
  template:
    metadata:
      labels:
        helm.sh/chart: dega-0.10.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: dega
        app.kubernetes.io/instance: dega
        app.kubernetes.io/component: studio
        app.kubernetes.io/name: dega-studio
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: studio
          securityContext:
            {}
          image: "factly/dega-studio:0.15.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: dega-studio-config
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js
      volumes:
        - name: dega-studio-config
          configMap:
            name: dega-studio-config
