# Default values for hunting.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

image:
  repository: factly/hunting
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Environment variables
env:     
  - name: PROJECT_NAME
    value: "Hunting Server"
  - name: API_V1_STR
    value: "/api/v1"
  - name: MODE
    value: "production"
  - name: EXAMPLE_URL
    value: "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
  # - name: ENABLE_PREFETCH
  #   value: "True"    
  - name: MONGODB_HOST
    value: "hunting-mongodb.default.svc.cluster.local"
  - name: MONGODB_PORT
    value: "27017"
  - name: MONGODB_DATABASE
    value: "hunting"
  - name: MONGODB_USER
    value: "root"
  - name: MONGODB_PASSWORD
    value: "password"  
  # - name: S3_ENDPOINT
  #   value: "minio:9000"
  # - name: S3_BUCKET
  #   value: "hunting"
  # - name: S3_KEY
  #   value: "minio"
  # - name: S3_SECRET
  #   value: "password"     
  # - name: S3_SECURE
  #   value: "False"                
  # - name: S3_ENDPOINT_TARGET
  #   value: "minio:9000"
  # - name: S3_BUCKET_TARGET
  #   value: "hunting"
  # - name: S3_KEY_TARGET
  #   value: "minio"
  # - name: S3_SECRET_TARGET
  #   value: "password"  
  # - name: S3_SECURE_TARGET
  #   value: "False"    
  # - name: CORS_ORIGINS
  #   value: "['*']"
  # - name: CORS_METHODS
  #   value: "['*']"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "hunting"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1
    memory: 2048Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

worker:
  enabled: false
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 1
      memory: 4096Mi
    requests:
      cpu: 100m
      memory: 128Mi   

flower:
  enabled: false
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  env:
    # - name: CELERY_BROKER_URL
    #   value:
    # - name: CELERY_RESULT_BACKEND
    #   value:

  service:
    type: ClusterIP
    port: 5555

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 0.5
      memory: 2Gi
    requests:
      cpu: 25m
      memory: 100Mi        

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local       


mongodb:
  enabled: false

  auth:
    enabled: true
    rootPassword: "password"
  
redis:
  enabled: false

  architecture: "standalone"

  auth:
    password: "password"