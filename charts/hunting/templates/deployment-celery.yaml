{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hunting.fullname" . }}-worker
  labels:
    {{- include "hunting.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hunting.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hunting.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hunting.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - poetry
            - run
            - celery
            - -A
            - app.worker
            - worker
            - -l
            - info      
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env }}
          env:
          {{- toYaml .Values.env | nindent 12 }}
          {{- end }}           
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            exec:
              command: [
                "sh",
                "-c",
                "celery -A app.worker inspect ping --destination celery@${HOSTNAME}"
              ]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10

          readinessProbe:
            exec:
              command: [
                "sh",
                "-c",
                "celery -A app.worker inspect ping --destination celery@${HOSTNAME}"
              ]
            initialDelaySeconds: 15  
            periodSeconds: 15
            timeoutSeconds: 10

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}      
